// <auto-generated />
using CoursesTikects.DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoursesTikects.DAL.Migrations
{
    [DbContext(typeof(TicketsContext))]
    [Migration("20230417205653_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoursesTikects.DAL.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Open Source"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AI"
                        });
                });

            modelBuilder.Entity("CoursesTikects.DAL.Data.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mohamed Okba"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ahmed Khaled"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ayman Hussien"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ebrahim Fathy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kareem Ahmed"
                        });
                });

            modelBuilder.Entity("CoursesTikects.DAL.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dept_Id = 3,
                            Title = "title1",
                            description = "dec1"
                        },
                        new
                        {
                            Id = 2,
                            Dept_Id = 1,
                            Title = "title2",
                            description = "dec2"
                        },
                        new
                        {
                            Id = 3,
                            Dept_Id = 1,
                            Title = "title3",
                            description = "dec3"
                        },
                        new
                        {
                            Id = 4,
                            Dept_Id = 2,
                            Title = "title4",
                            description = "dec4"
                        },
                        new
                        {
                            Id = 5,
                            Dept_Id = 3,
                            Title = "title5",
                            description = "dec5"
                        });
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("TicketsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("DeveloperTicket");
                });

            modelBuilder.Entity("CoursesTikects.DAL.Data.Models.Ticket", b =>
                {
                    b.HasOne("CoursesTikects.DAL.Data.Models.Department", "Department")
                        .WithMany("tickets")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.HasOne("CoursesTikects.DAL.Data.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoursesTikects.DAL.Data.Models.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoursesTikects.DAL.Data.Models.Department", b =>
                {
                    b.Navigation("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
